(assert-equal "d/d - case 1"
  (d/d (** x 2) x)
  (* 2 x))

(assert-equal "d/d - case 2"
  (d/d (** a (** x 2)) x)
  (* 2 (** a x^2) (log a) x))

(assert-equal "d/d - case 3"
  (d/d (* (cos x) (sin x)) x)
  (+ (* -1 (sin x)^2) (cos x)^2))

(assert-equal "d/d - case 4"
  (d/d (sigmoid z) z)
  (/ (exp (* -1 z)) (+ 1 (* 2 (exp (* -1 z))) (exp (* -1 z))^2)))

(assert-equal "d/d - case 5"
  (d/d (d/d (log x) x) x)
  (/ -1 x^2))

(assert-equal "d/d - case 6"
  (d/d (* (** x 2) (cos x)) x)
  (+ (* 2 x (cos x)) (* -1 x^2 (sin x))))

(assert-equal "d/d - case 7"
  (d/d (exp (exp x)) x)
  (* (exp (exp x)) (exp x)))

(assert-equal "tailor-expansion - case 1"
  (take 8 (taylor-expansion (** e (* i x)) x 0))
  {1 (* i x) (/ (* -1 x^2) 2) (/ (* -1 i x^3) 6) (/ x^4 24) (/ (* i x^5) 120) (/ (* -1 x^6) 720) (/ (* -1 i x^7) 5040)})

(assert-equal "tailor-expansion - case 2"
  (take 8 (taylor-expansion (cos x) x 0))
  {1 0 (/ (* -1 x^2) 2) 0 (/ x^4 24) 0 (/ (* -1 x^6) 720) 0})

(assert-equal "tailor-expansion - case 3"
  (take 8 (taylor-expansion (* i (sin x)) x 0))
  {0 (* i x) 0 (/ (* -1 i x^3) 6) 0 (/ (* i x^5) 120) 0 (/ (* -1 i x^7) 5040)})
