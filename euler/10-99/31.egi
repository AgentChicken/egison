(define $coins {1 2 5 10 20 50 100 200})

(define $f
  (memoized-lambda [$n $m]
    (match [n m] [integer integer]
      {[[$n ,1] 1]
       [[$n $m]
        (sum (map 1#(f (- n %1) (match coins (list integer) {[<join _ <cons $k <cons ,m _>>> k]}))
                  (while (lte? $ n) (map (* $ m) {0 @nats}))))]})))

(f 20 200)
(f 30 200)
(f 200 200)
