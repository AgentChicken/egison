;;;;;
;;;;;
;;;;; Term Rewriting
;;;;;
;;;;;

;(set-term-rewriting-rule {[(* (sqrt $x) (sqrt $y)) (* (gcd x y) (sqrt (/ (* x y) (gcd x y))))]
;                        ã€€[w^3 1]
;                          [w^2 (+ (* -1 w) -1)]
;                          [i^2 -1]})

(define $rewrite-math-expr
  (lambda [$mexpr]
    (if (number? mexpr)
      (if (rational? mexpr)
        mexpr
        (map-terms rewrite2 (map-terms rewrite1 mexpr)))
      mexpr)))

(define $map-terms
  (lambda [$fn $mexpr]
    (match mexpr math-expr
      {[<div <plus $ts1> <plus $ts2>>
        (/' (foldl +' 0 (map fn ts1))
            (foldl +' 0 (map fn ts2)))]})))

(define $rewrite1
  (lambda [$term]
    (match term term-expr
      {[<term $a <ncons (& ?even? $k) <symbol ,"i"> $ts>>
        (*' a (**' -1 (quotient k 2)) (foldl *' 1 (map 2#(**' %1 %2) ts)))]
       [<term $a <ncons $k <symbol ,"i"> $ts>>
        (*' a (**' -1 (quotient k 2)) i (foldl *' 1 (map 2#(**' %1 %2) ts)))]
       [_ term]})))

(define $rewrite2
  (lambda [$term]
    (match term term-expr
      {[<term $a <cons <apply ,"sqrt" <cons $x <nil>>> <cons <apply ,"sqrt" <cons $y <nil>>> $ts>>>
        (*' a (sqrt (*' x y)) (foldl *' 1 (map 2#(**' %1 %2) ts)))]
       [_ term]})))
