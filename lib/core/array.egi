;;;;;
;;;;;
;;;;; Array
;;;;;
;;;;;

(define $A.map
  (lambda [$f $a]
    (generate-array [$i] (array-size a) (f a_i))))

(define $A.update
  (lambda [$f $i $a]
    (generate-array [$j] (array-size a) (if (eq? j i) (f a_j) a_j))))

(define $V.inner-product
  (lambda [$v $w]
    (sum (map (lambda [$i] (* v_i w_i)) (between 1 (array-size v))))))

(define $M.transpose
  (lambda [$m]
    (generate-array [$i $j] [(array-size m_1) (array-size m)] m_j_i)))
