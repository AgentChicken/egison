;;;;;
;;;;;
;;;;; Integration
;;;;;
;;;;;

(define $Sd
  (lambda [$x $f]
    (match f math-expr
      {[?simple-term?
        (match [x f] [symbol-expr symbol-expr]
          {[[<symbol $name> <symbol !,name>] (* f x)]
           [[<symbol $name> <symbol ,name>] (* (/ 1 2) x^2)]
           [[_ <apply ,exp <cons ,x <nil>>>] f]
           [[_ <apply ,cos <cons ,x <nil>>>] (sin x)]
           [[_ <apply ,sin <cons ,x <nil>>>] (* -1 (cos x))]
           [[_ <apply ,log <cons ,x <nil>>>] (* -1 (cos x))]
           [[_ _] (Sd' x f)]
           })]
       [_ (Sd' x f)]})))

(define $Sd'
  (lambda [$x $f]
    (to-math-expr <Apply Sd (map from-math-expr {x f})>)))
