;;
;; Parameter
;;

(define $x [| φ θ ψ y α |])

;;
;; Riemann metric of S2 x S3
;;

(define $g__
  [|[| (/ (+ (* 3 '(+ 1 (* -1 y))^2 (sin θ)^2 '(+ a (* -1 y^2))) (* 2 '(+ a (* -3 y^2) (* 2 y^3)) (cos θ)^2 '(+ 1 (* -1 y))) (* '(+ a (* -2 y) y^2)^2 (cos θ)^2)) (* 18 '(+ a (* -1 y^2)) '(+ 1 (* -1 y)))) 0 (/ (+ (* -2 '(+ a (* -3 y^2) (* 2 y^3)) (cos θ) '(+ 1 (* -1 y))) (* -1 '(+ a (* -2 y) y^2)^2 (cos θ))) (* 18 '(+ a (* -1 y^2)) '(+ 1 (* -1 y)))) 0 (/ (* -1 '(+ a (* -2 y) y^2) (cos θ)) (* 3 '(+ 1 (* -1 y)))) |]
    [| 0 (/ '(+ 1 (* -1 y)) 6) 0 0 0 |]
    [| (/ (+ (* -2 '(+ a (* -3 y^2) (* 2 y^3)) (cos θ) '(+ 1 (* -1 y))) (* -1 '(+ a (* -2 y) y^2)^2 (cos θ))) (* 18 '(+ a (* -1 y^2)) '(+ 1 (* -1 y)))) 0 (/ (+ (* 2 '(+ a (* -3 y^2) (* 2 y^3)) '(+ 1 (* -1 y))) '(+ a (* -2 y) y^2)^2) (* 18 '(+ a (* -1 y^2)) '(+ 1 (* -1 y)))) 0 (/ (* 1 '(+ a (* -2 y) y^2)) (* 3 '(+ 1 (* -1 y)))) |]
    [| 0 0 0 (/ '(+ 1 (* -1 y)) (* 2 '(+ a (* -3 y^2) (* 2 y^3)))) 0 |]
    [| (/ (* -1 '(+ a (* -2 y) y^2) (cos θ)) (* 3 '(+ 1 (* -1 y)))) 0 (/ (* 1 '(+ a (* -2 y) y^2)) (* 3 '(+ 1 (* -1 y)))) 0 (/ (* 2 '(+ a (* -1 y^2))) '(+ 1 (* -1 y))) |]
    |]_#_#)

(define $g~~ (M.inverse g_#_#))
g~#~#
;[|[| (/ 6 (* '(+ 1 (* -1 y)) (sin θ)^2)) 0 (/ (* 6 (cos θ)) (* '(+ 1 (* -1 y)) (sin θ)^2)) 0 0 |]
;  [| 0 (/ 6 '(+ 1 (* -1 y))) 0 0 0 |]
;  [| (/ (* 6 (cos θ)) (* '(+ 1 (* -1 y)) (sin θ)^2)) 0 (/ (+ (* 9 '(+ 1 (* -1 y)) (sin θ)^2 '(+ a (* -1 y^2))) (* 6 '(+ a (* -3 y^2) (* 2 y^3)) (cos θ)^2)) (* '(+ a (* -3 y^2) (* 2 y^3)) '(+ 1 (* -1 y)) (sin θ)^2)) 0 (/ (* -3 '(+ a (* -2 y) y^2)) (* 2 '(+ a (* -3 y^2) (* 2 y^3)))) |]
;  [| 0 0 0 (/ (* 2 '(+ a (* -3 y^2) (* 2 y^3))) '(+ 1 (* -1 y))) 0 |]
;  [| 0 0 (/ (* -3 '(+ a (* -2 y) y^2)) (* 2 '(+ a (* -3 y^2) (* 2 y^3)))) 0 (/ (+ (* 2 '(+ 1 (* -1 y)) '(+ a (* -3 y^2) (* 2 y^3))) '(+ a (* -2 y) y^2)^2) (* 4 '(+ a (* -1 y^2)) '(+ a (* -3 y^2) (* 2 y^3)))) |]
;  |]~#~#

;;
;; Christoffel symbols of the first kind
;;

(define $Γ___
  (with-symbols {j k l}
    (* (/ 1 2)
       (+ (∂/∂ g_j_l x_k)
          (∂/∂ g_j_k x_l)
          (* -1 (∂/∂ g_k_l x_j))))))

;;
;; Christoffel symbols of the second kind
;;

(define $Γ~__
  (with-symbols {i j k l}
    (. g~i~j Γ_j_k_l)))

;;
;; Riemann curvature tensor
;;

(define $R~___
  (with-symbols {i j k l m}
    (+ (- (∂/∂ Γ~i_j_k x_l) (∂/∂ Γ~i_j_l x_k))
       (- (. Γ~m_j_k Γ~i_m_l) (. Γ~m_j_l Γ~i_m_k)))))

;;
;; Ricci curvature
;;

(define $Ric__ (with-symbols {i j k} (contract + R~i_j_k_i)))

(expand-all' (with-symbols {i j} (-' Ric_i_j (*' 4 g_i_j))))
;[| [| 0 0 0 0 0 |] [| 0 0 0 0 0 |] [| 0 0 0 0 0 |] [| 0 0 0 0 0 |] [| 0 0 0 0 0 |] |]

;;
;; Wodzicki-Chern-Simons form
;;

(let* {[[$es $os] (even-and-odd-permutations 5)]
       [$es' (map 1#(lambda [$i] (nth i %1)) es)]
       [$os' (map 1#(lambda [$i] (nth i %1)) os)]}
  (- (sum (map (lambda [$σ] (. R~u_5_s_(σ 1) R~s_t_(σ 3)_(σ 2) R~t_u_(σ 5)_(σ 4))) es'))
     (sum (map (lambda [$σ] (. R~u_5_s_(σ 1) R~s_t_(σ 3)_(σ 2) R~t_u_(σ 5)_(σ 4))) os'))))

; should return  (/ (* 32 (+ 1 (* -1 a))^2 y (sin θ)) (* 3 (+ 1 (* -1 y))^5))