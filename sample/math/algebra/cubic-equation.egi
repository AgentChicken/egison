(define $cubic-formula c-f)

(define $c-f
  (lambda [$f $x]
    (match (coefficients x f) (list math-expr)
      {[<cons $a_0 <cons $a_1 <cons $a_2 <cons $a_3 <nil>>>>>
        (c-f' a_3 a_2 a_1 a_0)]})))

(define $c-f'
  (lambda [$a $b $c $d]
    (match [a b c d] [math-expr math-expr math-expr math-expr]
      {[[,1 ,0 $p $q]
        (let {[[$s1 $s2] (2#[(rt 3 %1) (rt 3 %2)] (q-f' 1 (* 27 q) (* -27 p^3)))]}
          [(/ (+ s1 s2) 3)               ; r1
           (/ (+ (* w^2 s1) (* w s2)) 3) ; r2
           (/ (+ (* w s1) (* w^2 s2)) 3) ; r3
           ])]
       [[,1 $a2 $a1 $a0]
        (let {[[$y1 $y2 $y3] (c-f' 1 0 (- a1 (/ a2^2 3)) (+ a0 (* (/ -1 3) a1 a2) (* (/ 2 27) a2^3)))]}
          [(- y1 (/ a2 3)) (- y2 (/ a2 3)) (- y3 (/ a2 3))]
          )]
       [[_ _ _ _] (c-f' 1 (/ b a) (/ c a) (/ d a))]})))

(define $w (fst (q-f' 1 1 1)))
w
;=>(/ (+ -1 (* i (sqrt 3))) 2)

(c-f (* (- x 1) (- x 2) (- x 3)) x)
;=>[2 1 3]